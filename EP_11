#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int key;
    struct Node* next;
} Node;

int main() {
    int teste, endereco_base, chaves;
    scanf("%d", &teste);

    while (teste > 0) {
        scanf("%d %d", &endereco_base, &chaves);
        Node** hash = malloc(endereco_base * sizeof(Node*));

        for (int i = 0; i < endereco_base; i++) {
            hash[i] = NULL;
        }

        for (int i = 0; i < chaves; i++) {
            int chaveamento;
            scanf("%d", &chaveamento);
            int aux = chaveamento % endereco_base;

            Node* newNode = malloc(sizeof(Node));
            newNode->key = chaveamento;
            newNode->next = NULL;

            if (hash[aux] == NULL) {
                hash[aux] = newNode;
            } else {
                Node* current = hash[aux];
                while (current->next != NULL) {
                    current = current->next;
                }
                current->next = newNode;
            }
        }

        for (int i = 0; i < endereco_base; i++) {
            printf("%d ->", i);

            if (hash[i] == NULL) {
                printf(" \\");
            } else {
                Node* current = hash[i];
                while (current != NULL) {
                    printf(" %d ->", current->key);
                    current = current->next;
                }
                printf(" \\");
            }
            if(i + 1 != endereco_base){
            printf("\n");
        }}

        for (int i = 0; i < endereco_base; i++) {
            Node* current = hash[i];
            while (current != NULL) {
                Node* temp = current;
                current = current->next;
                free(temp);
            }
        }
        free(hash);
        if(teste - 1 != 0){
        printf("\n\n");
        }
        else{
            printf("\n");
        }
        teste--;
    }

    return 0;
}
